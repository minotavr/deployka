////////////////////////////////////////////////////////////////////////
//
// CLI-интерфейс для deployka
//
///////////////////////////////////////////////////////////////////////

#Использовать cmdline
#Использовать logos
#Использовать "."

Перем Лог;

Функция ПолучитьПарсерКоманднойСтроки()
    
    Парсер = Новый ПарсерАргументовКоманднойСтроки();
    
    МенеджерКомандПриложения.ЗарегистрироватьКоманды(Парсер);
    
    Возврат Парсер;
    
КонецФункции

Функция ПолезнаяРабота()
    ПараметрыЗапуска = РазобратьАргументыКоманднойСтроки();
    Если ПараметрыЗапуска = Неопределено или ПараметрыЗапуска.Количество() = 0 Тогда
        Лог.Ошибка("Некорректные аргументы командной строки");
        МенеджерКомандПриложения.ПоказатьСправкуПоКомандам();
        Возврат 1;
    КонецЕсли;
    
    Возврат МенеджерКомандПриложения.ВыполнитьКоманду(ПараметрыЗапуска.Команда, ПараметрыЗапуска.ЗначенияПараметров);
    
КонецФункции

Функция АргументыКоманднойСтрокиСКавычками()
	АргументыКоманднойСтрокиСКавычками = Новый Массив;
	ИмяПараметраПодключения = "/F";
	ДлинаПараметра = СтрДлина(ИмяПараметраПодключения);
	ДвойнаяКавычка = """";
	Для каждого АргументСтроки Из АргументыКоманднойСтроки Цикл
		ОбработанныйАргумент = АргументСтроки;
		Если СтрНайти(АргументСтроки, ИмяПараметраПодключения) Тогда
			ПутьКИнформационнойБазе = Сред(АргументСтроки, ДлинаПараметра + 1); 
			ОбработанныйАргумент = ИмяПараметраПодключения + ДвойнаяКавычка + ПутьКИнформационнойБазе + ДвойнаяКавычка;
		КонецЕсли;
		АргументыКоманднойСтрокиСКавычками.Добавить(ОбработанныйАргумент);
	КонецЦикла;

	Возврат АргументыКоманднойСтрокиСКавычками;
КонецФункции 
Функция РазобратьАргументыКоманднойСтроки()
    Парсер = ПолучитьПарсерКоманднойСтроки();
    АргументыКоманднойСтрокиСКавычками = АргументыКоманднойСтрокиСКавычками();
    Возврат Парсер.Разобрать(АргументыКоманднойСтрокиСКавычками);
КонецФункции

/////////////////////////////////////////////////////////////////////////

Лог = Логирование.ПолучитьЛог("vanessa.app.deployka");
УровеньЛога = УровниЛога.Отладка;

Попытка
    ЗавершитьРаботу(ПолезнаяРабота());
Исключение
    Лог.КритичнаяОшибка(ОписаниеОшибки());
    ЗавершитьРаботу(МенеджерКомандПриложения.РезультатыКоманд().ОшибкаВремениВыполнения);
КонецПопытки;
